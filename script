import requests
import hashlib
import time
import json
from collections import OrderedDict

def get_token(id, timestamp, lang, hash):
    params = [id, timestamp, lang, hash]
    return ';'.join(params)

def get_hash(api_key, id, timestamp, lang, service, json_data):
    return hashlib.sha256(
        ";".join([
            api_key, id, timestamp, lang, service,
            json_data
        ]).encode("utf-8")
    ).hexdigest()

id = "DEMO" # to be replaced by the My space access identifier
api_key = "12345678" # to be replaced by the API key generated to use the zoom function


service = "api/zoomclient/recherche-envois"
url = "https://espace-client.geodis.com/services-mock/" + service

lang = "fr"
timestamp = "%d" % (time.time() * 1000)
params = OrderedDict([
#   ("dateDepart", ""),
    ("dateDepartDebut", "2019-07-08"),
    ("dateDepartFin", "2019-07-09"),
#   ("noRecepisse", ""),
#   ("reference1", ""),
#   ("cabColis", ""),
#   ("noSuivi", ""),
#   ("codeSa", ""),
#   ("codeClient", ""),
#   ("codeProduit", ""),
#   ("typePrestation", ""),
#   ("dateLivraison", ""),
#   ("refDest", ""),
#   ("nomDest", ""),
#   ("codePostalDest", ""),
#   ("natureMarchandise", ""),
])

json_data = json.dumps(params, separators=(',', ':'))
print(f'json_data>>>{json_data}')


hash = get_hash(api_key, id, timestamp, lang, service, json_data)
print(hash)

token = get_token(id, timestamp, lang, hash)
print(f'token>>>{token}')


headers = {'X-GEODIS-Service': token}


print(f'headers->{headers}')


try:
    response = requests.post(url, data=json_data, headers=headers)
    response.raise_for_status()  # Vérifie si la requête a échoué
except requests.exceptions.HTTPError as errh:
    print(f"Http Error: {errh}")
except requests.exceptions.ConnectionError as errc:
    print(f"Error Connecting: {errc}")
except requests.exceptions.Timeout as errt:
    print(f"Timeout Error: {errt}")
except requests.exceptions.RequestException as err:
    print(f"OOps: Something Else: {err}")


# Afficher le statut de la réponse
print(f'response.status_code->{response.status_code}')

# Afficher le contenu de la réponse (au format JSON)
print(response.json())

